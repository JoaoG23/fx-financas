generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model usuarios {
  id           String         @id @default(uuid())
  nome         String         @db.VarChar(200)
  username     String         @db.VarChar(200)
  senha        String
  email        String         @db.VarChar(200)
  telefone     String         @db.VarChar(22)
  createdAt    DateTime       @default(now())
  updateAt     DateTime       @updatedAt
  fluxocaixa   fluxocaixa[]
  elementos    elementos[]
  locais       locais[]
  subelementos subelementos[]
  tipos        tipos[]
  subtipos     subtipos[]
}

model elementos {
  id           String         @id @default(uuid())
  descricao    String         @db.VarChar(70)
  fluxocaixa   fluxocaixa[]
  subelementos subelementos[]
  usuarios     usuarios?      @relation(fields: [usuariosId], references: [id], onDelete: Cascade)
  usuariosId   String?        @db.VarChar(36)
}

model subelementos {
  id          String       @id @default(uuid())
  descricao   String       @db.VarChar(70)
  elementosId String?
  tipos       tipos[]
  elementos   elementos?   @relation(fields: [elementosId], references: [id], onDelete: Cascade)
  fluxocaixa  fluxocaixa[]
  usuarios    usuarios?    @relation(fields: [usuariosId], references: [id])
  usuariosId  String?      @db.VarChar(36)
}

model tipos {
  id             String        @id @default(uuid())
  descricao      String        @db.VarChar(70)
  subelementos   subelementos? @relation(fields: [subelementosId], references: [id], onDelete: Cascade)
  subelementosId String?
  subtipos       subtipos[]
  fluxocaixa     fluxocaixa[]
  usuarios       usuarios?     @relation(fields: [usuariosId], references: [id])
  usuariosId     String?       @db.VarChar(36)
}

model subtipos {
  id         String       @id @default(uuid())
  descricao  String       @db.VarChar(70)
  tipos      tipos?       @relation(fields: [tiposId], references: [id], onDelete: Cascade)
  tiposId    String?
  fluxocaixa fluxocaixa[]
  usuarios   usuarios?    @relation(fields: [usuariosId], references: [id])
  usuariosId String?      @db.VarChar(36)
}

model fluxocaixa {
  orderador        Int             @default(autoincrement())
  id               String          @id @default(uuid())
  data_insersao    DateTime        @db.Timestamp
  descricao        String          @db.VarChar(70)
  valor            Decimal         @db.Decimal(12, 2)
  saldo            Decimal?        @default(0) @db.Decimal(12, 2)
  elementosId      String?         @default("")
  usuariosId       String?         @db.VarChar(36)
  elementos        elementos?      @relation(fields: [elementosId], references: [id])
  usuarios         usuarios?       @relation(fields: [usuariosId], references: [id])
  locais           locais?         @relation(fields: [locaisId], references: [id])
  locaisId         String?         @default("")
  subelementos     subelementos?   @relation(fields: [subelementosId], references: [id])
  subelementosId   String?         @default("")
  tipos            tipos?          @relation(fields: [tiposId], references: [id])
  tiposId          String?         @default("")
  subtipos         subtipos?       @relation(fields: [subtiposId], references: [id])
  subtiposId       String?         @default("")
  tipos_despesas   tipos_despesas? @relation(fields: [tipos_despesasId], references: [id])
  tipos_despesasId String?
}

model tipos_despesas {
  id         String       @id @default(uuid())
  descricao  String       @db.VarChar(30)
  fluxocaixa fluxocaixa[]
}

model locais {
  id         String       @id @default(uuid())
  descricao  String       @db.VarChar(70)
  usuarios   usuarios?    @relation(fields: [usuariosId], references: [id])
  usuariosId String?      @default("") @db.VarChar(36)
  fluxocaixa fluxocaixa[]
}
